require 'puppet-catalog-test'
require 'puppet-lint/tasks/puppet-lint'
require 'puppet-syntax/tasks/puppet-syntax'

envdir = File.join("environments", "seed_stack")

exclude_paths = ["vendor/**/*", "**/modules/**/*"]

PuppetSyntax.fail_on_deprecation_notices = false
PuppetSyntax.exclude_paths = exclude_paths
PuppetSyntax.hieradata_paths = ["#{envdir}/hieradata/**/*.yaml"]

Rake::Task[:lint].clear
PuppetLint::RakeTask.new(:lint) do |config|
  config.fail_on_warnings = true
  config.ignore_paths = exclude_paths
end

desc "Install modules using librarian-puppet"
task :module_install do
  sh "librarian-puppet install --path=#{envdir}/modules"
end

def write_yaml_file(filename, data)
  File.open(filename, 'w') do |file|
    file.write("# This file is autogenerated.\n")
    file.write("# Please do not commit it.\n")
    file.write("\n")
    file.write(YAML.dump(data))
  end
end

# Build a hiera config by reading and modifying the real one:
#  - the clusterparams source needs to be generated and pointed to
#  - all heirarchy nodes need %{::trusted.certname} replaced with %{::fqdn}
#  - the datadir needs to point to the right place
def build_hiera_config(hiera_config_file)
  Dir.mkdir("test_config") unless Dir.exists?("test_config")

  cparams = {
    'clusterparams:controller_ip' => '192.168.55.11',
    'clusterparams:public_ip' => '192.168.55.20',
    'clusterparams:worker_ip' => '192.168.55.21',
    'clusterparams:gluster_nodes' => ['controller.seed-stack.local',],
    'clusterparams:infr_domain' => 'infr.controller.seed-stack.local',
    'clusterparams:controller_ips' => ['192.168.55.11'],
    'clusterparams:dcos_package_opts' => {
            'marathon-lb' => {
              'mem' => 256,
              'cpus' => 1
              }
            },
    'clusterparams:hub_domain' => "%{hiera('clusterparams:public_ip')}.xip.io",
  }
  write_yaml_file(File.join("test_config", "clusterparams.yaml"), cparams)

  cfg = YAML.load_file(hiera_config_file)
  cfg[:yaml][:datadir] = "environments/seed_stack/hieradata"
  cfg[:hierarchy].map! do |l|
    l.gsub("%{::trusted.certname}", "%{::fqdn}")
      .gsub("clusterparams", "../../../test_config/clusterparams")
  end
  write_yaml_file(File.join("test_config", "hiera.yaml"), cfg)
end

PuppetCatalogTest::RakeTask.new(:catalog) do |t|
  # Both the syntax and catalog initialize Puppet with config. Puppet doesn't
  # like config being set twice. This clears the config if it's set.
  Puppet.settings.send(:clear_everything_for_tests)

  # Build a hiera config that matches our real one, but replaces things the
  # need to be different in tests.
  build_hiera_config("hiera.yaml")

  t.module_paths = [File.join(envdir, "modules")]
  t.manifest_path = File.join(envdir, "manifests", "site.pp")
  t.facts = {
    "osfamily" => "Debian",
    "ipaddress_lo" => "127.0.0.1",
    "ipaddress_eth0" => "10.2.3.4",
    "architecture" => "amd64",
    "operatingsystem" => "Ubuntu",
    "operatingsystemrelease" => "14.04",
    "lsbdistid" => "Ubuntu",
    "lsbdistrelease" => "14.04",
    "lsbdistcodename" => "trusty",
    "concat_basedir" => "/tmp/puppetconcat",
    "puppetversion" => Puppet.version,
  }
  t.config_dir = "test_config"
end

task :default => [
  :syntax,
  :module_install,
  :catalog,
  :lint,
]
